<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<!--好的讲解博客:https://blog.csdn.net/zjcsuct/article/details/111402573-->
<generatorConfiguration>

    <!--数据库连接-->
    <context id="DB2Tables" targetRuntime="MyBatis3">
        <!--注释-->
<!--        <commentGenerator>-->
<!--            <property name="suppressAllComments" value="true"/>-->
<!--            <property name="suppressDate" value="true"/>-->
<!--        </commentGenerator>-->
        <!--数据库连接地址及账号密码-->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://127.0.0.1:3306/seckill?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC&amp;useSSL=false&amp;allowPublicKeyRetrieval=true"
                        userId="root"
                        password="my897sql">
            <!-- 解决table schema中有多个重名的表生成表结构不一致问题 -->
            <property name="nullCatalogMeansCurrent" value="true"/>
        </jdbcConnection>

<!--        <javaTypeResolver>-->
<!--            <property name="forceBigDecimals" value="false" />-->
<!--        </javaTypeResolver>-->
        <!--生成pojo类存放位置-->
        <javaModelGenerator targetPackage="com.shop.seckill.pojo" targetProject="src/main/java">
<!--            &lt;!&ndash;是否对model添加构造函数&ndash;&gt;-->
<!--            <property name="constructorBased" value="false"/>-->
<!--            &lt;!&ndash;是否允许子包&ndash;&gt;-->
<!--            <property name="enableSubPackages" value="true"/>-->
            <!--建立的model对象是否不可变，也就是生成的model没有setter方法-->
            <property name="immutable" value="false"/>
            <!--trimStrings:是否对数据库查询结果进行trim操作，如果设置为true就会生成类似这样-->
            <!--public void setUsername(String username) {this.username = username == null ? null : username.trim();}的setter方法。默认值为false-->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!--生成映射文件存放位置-->
        <sqlMapGenerator targetPackage="mapper"  targetProject="src/main/resources">
            <!--enableSubPackages:如果true，MBG会根据catalog和schema来生成子包。如果false就会直接用targetPackage属性。默认为false-->
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!--生成Dao类的存放位置-->
        <!-- 客户端代码,生成易于使用的正对Model对象和XML配置文件的代码
        type="ANNOTATEDMAPPER", 生成Java Model和基于注解的Mapper对象
        type="MIXEDMAPPER", 生成基于注解的Java Model和相应的Mapper对象
        type="XMLMAPPER", 生成SQLMap XML文件和独立的Mapper接口
        -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.shop.seckill.dao"  targetProject="src/main/java">
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>

        <!--生成对应表及类名-->
        <!--enableCountByExample  enableUpdateByExample 这些设置为false是为了去掉复杂查询Example的例子,复杂查询一般手写-->
<!--        <table tableName="user_info" domainObjectName="User" enableCountByExample="false"-->
<!--               enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false"-->
<!--               enableInsert="true" enableDeleteByPrimaryKey="false" ></table>-->
<!--        <table tableName="user_password" domainObjectName="UserPassword" enableCountByExample="false"-->
<!--               enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false"-->
<!--               enableInsert="true" enableDeleteByPrimaryKey="false" ></table>-->
<!--        <table tableName="item" domainObjectName="Item" enableCountByExample="false"-->
<!--               enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false"-->
<!--               enableInsert="true" enableDeleteByPrimaryKey="false" >-->
<!--            &lt;!&ndash;遇到数据库中decimal属性值,默认是转为Long的,这里要定义转换方式才行,教程里 是改成了Double默认转Double,代码是和教程同步的&ndash;&gt;-->
<!--            &lt;!&ndash;<columnOverride column="price" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />&ndash;&gt;-->
<!--        </table>-->
<!--        <table tableName="item_stock" domainObjectName="ItemStock" enableCountByExample="false"-->
<!--               enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false"-->
<!--               enableInsert="true" enableDeleteByPrimaryKey="false" ></table>-->
<!--        <table tableName="order_info" domainObjectName="Order" enableCountByExample="false"-->
<!--               enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false"-->
<!--               enableInsert="true" enableDeleteByPrimaryKey="false" ></table>-->
<!--        <table tableName="sequence_info" domainObjectName="Sequence" enableCountByExample="false"-->
<!--               enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false"-->
<!--               enableInsert="true" enableDeleteByPrimaryKey="false" ></table>-->
<!--        <table tableName="promo" domainObjectName="Promo" enableCountByExample="false"-->
<!--               enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false"-->
<!--               enableInsert="true" enableDeleteByPrimaryKey="false" ></table>-->
<!--        <table tableName="stock_log" domainObjectName="StockLog" enableCountByExample="false"-->
<!--               enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false"-->
<!--               enableInsert="true" enableDeleteByPrimaryKey="false" ></table>-->

    </context>

</generatorConfiguration>